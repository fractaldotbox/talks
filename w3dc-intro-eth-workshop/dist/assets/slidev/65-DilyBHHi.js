import{o as a,c as s,k as r,q as n,s as i,A as e,e as t}from"../modules/vue-M1BTZfNP.js";import{I as c}from"./default-DV4YAfmm.js";import{u as l,f as d}from"./context-73LboBb6.js";import"../index-Bz_hBNU-.js";import"../modules/shiki-IgOrI35b.js";const f=t("h2",null,"Scaffold - ETH",-1),h=t("ul",null,[t("li",null,[t("a",{href:"https://docs.scaffoldeth.io/#scaffold-eth-2-tech-stack",target:"_blank"},"https://docs.scaffoldeth.io/#scaffold-eth-2-tech-stack")])],-1),u=t("p",null,"Hardhat or Foundry (userâ€™s choice) for running local networks, deploying and testing smart contracts. Wagmi for React Hooks to start working with Ethereum. Viem as low-level interface that provides primitives to interact with Ethereum. The alternative to ethers.js and web3.js. NextJS for building a frontend, using many useful pre-made hooks. RainbowKit for adding wallet connection. DaisyUI for pre-built Tailwind CSS components.",-1),j={__name:"65",setup(p){const{$slidev:m,$nav:_,$clicksContext:k,$clicks:g,$page:w,$renderContext:v,$frontmatter:o}=l();return(x,$)=>(a(),s(c,n(i(e(d)(e(o),64))),{default:r(()=>[f,h,u]),_:1},16))}};export{j as default};
