import{o,c as l,k as a,q as s,s as n,A as t,e}from"../modules/vue-BgevEOlU.js";import{I as i}from"./default-BDAc5mjR.js";import{aP as r}from"../index-DLCtXTog.js";import{p as u,u as p,f as c}from"./context-eitkBDSY.js";import"../modules/shiki-BkLVX0UD.js";const m=e("h1",null,"Elliptic Curve Cryptography (ECC)",-1),h=e("ul",null,[e("li",null,[e("p",null,"Given P,Q on the curves, P+Q=?")]),e("li",null,[e("p",null,"Imagine our public keys are generated on the curve"),e("ul",null,[e("li",null,[e("a",{href:"https://emn178.github.io/online-tools/ecdsa/key-generator/",target:"_blank"},"secp256k1 generator")]),e("li",null,[e("code",null,"Ethereum: From the Keccak-256 hash of the public key, we take the last 20 bytes (160 bits) to obtain the EOA address.")])])]),e("li",null,[e("p",null,"Elliptic curve discrete logarithm problem (ECDLP) = Hard (without private key)")])],-1),C={__name:"34",setup(d){return u(r),p(),(_,f)=>(o(),l(i,s(n(t(c)(t(r),33))),{default:a(()=>[m,h]),_:1},16))}};export{C as default};
